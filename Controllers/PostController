using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Catedra3IDWMBackend.Controllers
{
    [Route("api/posts")]
    [ApiController]
    public class PostController : ControllerBase
    {
        private readonly ApplicationDbContext _context;
        private readonly CloudinaryService _cloudinaryService;

        public PostController(ApplicationDbContext context, CloudinaryService cloudinaryService)
        {
            _context = context;
            _cloudinaryService = cloudinaryService;
        }

        [HttpPost]
        public async Task<IActionResult> CreatePost([FromForm] PostDto postDto)
        {
            if (postDto.Image == null || postDto.Image.Length == 0)
                return BadRequest("No se ha subido la imagen.");

            var imageUrl = await _cloudinaryService.UploadImageAsync(postDto.Image);

            var post = new Post
            {
                Title = postDto.Title,
                PublishedAt = DateTime.Now,
                ImageUrl = imageUrl,
                UserId = User.FindFirstValue(ClaimTypes.NameIdentifier)
            };

            _context.Posts.Add(post);
            await _context.SaveChangesAsync();

            return CreatedAtAction(nameof(GetPosts), new { id = post.Id }, post);
        }

        [HttpGet]
        public async Task<ActionResult<IEnumerable<Post>>> GetPosts()
        {
            var posts = await _context.Posts.ToListAsync();
            return Ok(posts);
        }
    }

}
